# 
# THESE VALUES ARE USED TO ESTABLISH A CONNECTION 
# TO THE DATABASE.  SIMPLE JDBC STUFF RIGHT HERE.
#
url=jdbc:derby://localhost:1527/sample
username=sa
password=CLEAR_TEXT_PASSWORD


#
# THIS IS THE SQL COMMAND FOR YOUR DATABASE TO SWITCH
# TO A DIFFERENT SCHEMA IN YOUR DATABASE.  IF THE
# SCRIPT_HISTORY TABLE DOES NOT EXIST, RIVIERA WILL
# CREATE THE TABLE INSIDE OF THIS SCHEMA.  LEAVE THIS
# VALUE BLANK IF YOU DON'T NEED TO CHANGE SCHEMAS.
#
set_schema=set schema APP


#
# THESE VALUES ARE USED TO SEARCH YOUR DATABASE FOR THE
# SCRIPT_HISTORY* TABLE. A LIST OF TABLES IS RETRIEVED
# FROM THE DATABASE IN THE FOLLOWING WAY:
#
#    Connection.getMetaData().getTables()
#
# HERE ARE THE DETAILS ABOUT THIS METHOD:
#
#
# Connection.getMetaData().getTables(
#    String catalog,
#    String schemaPattern,
#    String tableNamePattern,
#    String[] types
# )
#
# Retrieves a description of the tables available in the given 
# catalog. Only table descriptions matching the catalog, schema, 
# table name and type criteria are returned. They are ordered 
# by: TABLE_TYPE, TABLE_CAT, TABLE_SCHEM and TABLE_NAME.
#
# Each table description has the following columns:
#
#    TABLE_CAT String => table catalog (may be null)
#    TABLE_SCHEM String => table schema (may be null)
#    TABLE_NAME String => table name
#    TABLE_TYPE String => table type. Typical types are "TABLE", "VIEW", "SYSTEM TABLE", "GLOBAL TEMPORARY", "LOCAL TEMPORARY", "ALIAS", "SYNONYM".
#    REMARKS String => explanatory comment on the table
#    TYPE_CAT String => the types catalog (may be null)
#    TYPE_SCHEM String => the types schema (may be null)
#    TYPE_NAME String => type name (may be null)
#    SELF_REFERENCING_COL_NAME String => name of the designated "identifier" column of a typed table (may be null)
#    REF_GENERATION String => specifies how values in SELF_REFERENCING_COL_NAME are created. Values are "SYSTEM", "USER", "DERIVED". (may be null) 
#
# Note: Some databases may not return information for all tables.
#
# Parameters:
#    catalog - a catalog name; must match the catalog name 
#              as it is stored in the database; "" retrieves 
#              those without a catalog; null means that the 
#              catalog name should not be used to narrow the search
#
#    schemaPattern - a schema name pattern; must match the 
#                    schema name as it is stored in the database;
#                    "" retrieves those without a schema; null 
#                    means that the schema name should not be 
#                    used to narrow the search. The pattern accepts
#                    standard SQL patterns for a LIKE condition
#
#    tableNamePattern - a table name pattern; must match the table 
#                       name as it is stored in the database The 
#                       pattern accepts standard SQL patterns for
#                       a LIKE condition
#
#    types - a list of table types, which must be from the list 
#            of table types returned from getTableTypes(), to 
#            include; null returns all types
#
# TABLE_TYPE=TABLE, TABLE_CAT=, TABLE_SCHEM=APP, TABLE_NAME=FOO
#
table_types=TABLE,SYSTEM TABLE
table_cat=null
table_schem_pattern=APP
table_name_pattern=SCRIPT_HISTORY
